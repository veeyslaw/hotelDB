-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2021-01-01 21:19:53 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE apartment (
    apart_id              NUMBER(5) NOT NULL,
    hotel_id              NUMBER(2) NOT NULL,
    apart_number          NUMBER(3) NOT NULL,
    room_count            NUMBER(1) NOT NULL,
    apart_capacity        NUMBER(2) NOT NULL,
    price_per_night_euro  NUMBER(6, 2) NOT NULL
);

ALTER TABLE apartment
    ADD CONSTRAINT apartment_room_number_ck CHECK ( room_count BETWEEN 1 AND 4 );

ALTER TABLE apartment
    ADD CONSTRAINT apartment_apart_capacity_ck CHECK ( apart_capacity BETWEEN 1 AND 20 );

ALTER TABLE apartment ADD CONSTRAINT apartment_pk PRIMARY KEY ( apart_id );

ALTER TABLE apartment ADD CONSTRAINT apartment_un UNIQUE ( hotel_id,
                                                           apart_number );

CREATE TABLE apartment_description (
    apart_id         NUMBER(5) NOT NULL,
    air_conditioner  NUMBER(1) NOT NULL,
    minibar          NUMBER(1) NOT NULL,
    tv               NUMBER(1) NOT NULL,
    double_bed       NUMBER(1) NOT NULL
);

ALTER TABLE apartment_description
    ADD CONSTRAINT apart_desc_air_conditioner_ck CHECK ( air_conditioner IN ( 0, 1 ) );

ALTER TABLE apartment_description
    ADD CONSTRAINT apart_desc_minibar_ck CHECK ( minibar IN ( 0, 1 ) );

ALTER TABLE apartment_description
    ADD CONSTRAINT apart_desc_tv_ck CHECK ( tv IN ( 0, 1 ) );

ALTER TABLE apartment_description
    ADD CONSTRAINT apart_desc_double_bed_ck CHECK ( double_bed IN ( 0, 1 ) );

ALTER TABLE apartment_description ADD CONSTRAINT apart_desc_pk PRIMARY KEY ( apart_id );

CREATE TABLE booking (
    guest_id        NUMBER(2) NOT NULL,
    apart_id        NUMBER(5) NOT NULL,
    book_date       DATE NOT NULL,
    check_in        DATE NOT NULL,
    check_out       DATE NOT NULL,
    adults_count    NUMBER(2) NOT NULL,
    children_count  NUMBER(2) NOT NULL
);

ALTER TABLE booking
    ADD CONSTRAINT booking_adults_number_ck CHECK ( adults_count BETWEEN 1 AND 20 );

ALTER TABLE booking
    ADD CONSTRAINT booking_children_number_ck CHECK ( children_count BETWEEN 0 AND 19 );

ALTER TABLE booking
    ADD CONSTRAINT booking_duration_ck CHECK ( check_out - check_in > 0 );

ALTER TABLE booking
    ADD CONSTRAINT booking_not_past_ck CHECK ( check_in - book_date >= 0 );

ALTER TABLE booking ADD CONSTRAINT booking_pk PRIMARY KEY ( apart_id,
                                                            check_in );

CREATE TABLE city (
    city_id    NUMBER(2) NOT NULL,
    city_name  VARCHAR2(20) NOT NULL
);

ALTER TABLE city
    ADD CONSTRAINT city_city_name_ck CHECK ( length(TRIM(city_name)) IS NOT NULL
                                             AND length(TRIM(translate(city_name, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ ',
                                             ' '))) IS NULL );

ALTER TABLE city ADD CONSTRAINT city_pk PRIMARY KEY ( city_id );

ALTER TABLE city ADD CONSTRAINT city_city_name_un UNIQUE ( city_name );

CREATE TABLE guest (
    guest_id         NUMBER(2) NOT NULL,
    first_name       VARCHAR2(100) NOT NULL,
    last_name        VARCHAR2(100) NOT NULL,
    passport_number  VARCHAR2(50) NOT NULL,
    email            VARCHAR2(400) NOT NULL,
    phone_number     CHAR(15)
);

ALTER TABLE guest
    ADD CONSTRAINT guest_first_name_ck CHECK ( length(TRIM(first_name)) IS NOT NULL
                                               AND length(TRIM(translate(last_name, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ- ',
                                               ' '))) IS NULL );

ALTER TABLE guest
    ADD CONSTRAINT guest_last_name_ck CHECK ( length(TRIM(last_name)) IS NOT NULL
                                              AND length(TRIM(translate(last_name, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ- ',
                                              ' '))) IS NULL );

ALTER TABLE guest
    ADD CONSTRAINT guest_passport_number_ck CHECK ( instr(passport_number, ' ') = 0
                                                    AND length(TRIM(translate(passport_number, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ',
                                                    ' '))) IS NULL );

ALTER TABLE guest ADD CONSTRAINT guest_email_ck CHECK ( email LIKE '_%@_%._%' );

ALTER TABLE guest
    ADD CONSTRAINT guest_phone_number_ck CHECK ( phone_number LIKE '+%'
                                                 AND length(TRIM(translate(substr(phone_number, 2), '0123456789', ' '))) IS NULL );

ALTER TABLE guest ADD CONSTRAINT guest_pk PRIMARY KEY ( guest_id );

ALTER TABLE guest ADD CONSTRAINT guest_passport_number_un UNIQUE ( passport_number );

CREATE TABLE hotel (
    hotel_id        NUMBER(2) NOT NULL,
    hotel_name      VARCHAR2(30) NOT NULL,
    city_id         NUMBER(2) NOT NULL,
    contact_number  CHAR(15) NOT NULL,
    manager_name    VARCHAR2(666)
);

ALTER TABLE hotel
    ADD CONSTRAINT hotel_contact_number_ck CHECK ( contact_number LIKE '+%'
                                                   AND length(TRIM(translate(substr(contact_number, 2), '0123456789', ' '))) IS NULL );

ALTER TABLE hotel
    ADD CONSTRAINT hotel_manager_name_ck CHECK ( manager_name IS NULL
                                                 OR ( length(TRIM(manager_name)) IS NOT NULL
                                                      AND length(TRIM(translate(manager_name, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ- ',
                                                      ' '))) IS NULL ) );

ALTER TABLE hotel ADD CONSTRAINT hotel_pk PRIMARY KEY ( hotel_id );

ALTER TABLE hotel ADD CONSTRAINT hotel_hotel_name_un UNIQUE ( hotel_name );

CREATE TABLE hotel_description (
    hotel_id       NUMBER(2) NOT NULL,
    text_desc      VARCHAR2(150) NOT NULL,
    rating         NUMBER(1),
    restaurant     NUMBER(1) NOT NULL,
    free_meals     NUMBER(1) NOT NULL,
    pool           NUMBER(1) NOT NULL,
    free_internet  NUMBER(1) NOT NULL
);

ALTER TABLE hotel_description
    ADD CONSTRAINT hotel_desc_rating_ck CHECK ( rating BETWEEN 1 AND 5 );

ALTER TABLE hotel_description
    ADD CONSTRAINT hotel_desc_restaurant_ck CHECK ( restaurant IN ( 0, 1 ) );

ALTER TABLE hotel_description
    ADD CONSTRAINT hotel_desc_free_meals_ck CHECK ( free_meals IN ( 0, 1 ) );

ALTER TABLE hotel_description
    ADD CONSTRAINT hotel_desc_pool_ck CHECK ( pool IN ( 0, 1 ) );

ALTER TABLE hotel_description
    ADD CONSTRAINT hotel_desc_free_internet_ck CHECK ( free_internet IN ( 0, 1 ) );

ALTER TABLE hotel_description ADD CONSTRAINT hotel_description_pk PRIMARY KEY ( hotel_id );

ALTER TABLE apartment_description
    ADD CONSTRAINT apart_desc_apart_fk FOREIGN KEY ( apart_id )
        REFERENCES apartment ( apart_id )
            ON DELETE CASCADE;

ALTER TABLE apartment
    ADD CONSTRAINT apartment_hotel_fk FOREIGN KEY ( hotel_id )
        REFERENCES hotel ( hotel_id )
            ON DELETE CASCADE;

ALTER TABLE booking
    ADD CONSTRAINT booking_apartment_fk FOREIGN KEY ( apart_id )
        REFERENCES apartment ( apart_id )
            ON DELETE CASCADE;

ALTER TABLE booking
    ADD CONSTRAINT booking_guest_fk FOREIGN KEY ( guest_id )
        REFERENCES guest ( guest_id )
            ON DELETE CASCADE;

ALTER TABLE hotel
    ADD CONSTRAINT hotel_city_fk FOREIGN KEY ( city_id )
        REFERENCES city ( city_id )
            ON DELETE CASCADE;

ALTER TABLE hotel_description
    ADD CONSTRAINT hotel_description_hotel_fk FOREIGN KEY ( hotel_id )
        REFERENCES hotel ( hotel_id )
            ON DELETE CASCADE;

CREATE SEQUENCE apartment_apartment_id_seq START WITH 1 MAXVALUE 99999 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER apartment_apartment_id_trg BEFORE
    INSERT ON apartment
    FOR EACH ROW
    WHEN ( new.apart_id IS NULL )
BEGIN
    :new.apart_id := apartment_apartment_id_seq.nextval;
END;
/

CREATE SEQUENCE city_city_id_seq START WITH 1 MAXVALUE 99 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER city_city_id_trg BEFORE
    INSERT ON city
    FOR EACH ROW
    WHEN ( new.city_id IS NULL )
BEGIN
    :new.city_id := city_city_id_seq.nextval;
END;
/

CREATE SEQUENCE guest_guest_id_seq START WITH 1 MAXVALUE 99 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER guest_guest_id_trg BEFORE
    INSERT ON guest
    FOR EACH ROW
    WHEN ( new.guest_id IS NULL )
BEGIN
    :new.guest_id := guest_guest_id_seq.nextval;
END;
/

CREATE SEQUENCE hotel_hotel_id_seq START WITH 1 MAXVALUE 99 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER hotel_hotel_id_trg BEFORE
    INSERT ON hotel
    FOR EACH ROW
    WHEN ( new.hotel_id IS NULL )
BEGIN
    :new.hotel_id := hotel_hotel_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             0
-- ALTER TABLE                             40
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
